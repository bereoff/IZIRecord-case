openapi: 3.0.3
info:
  title: IZI Record Test API
  version: 1.0.0
  description: Proposed project for technical evaluation in a selection process.
paths:
  /api/v1/person/student/:
    post:
      operationId: v1_person_student_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Students'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Students'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
  /api/v1/person/student/{id}/:
    delete:
      operationId: v1_person_student_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/person/student/by_name/:
    get:
      operationId: v1_person_student_by_name_retrieve
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
  /api/v1/person/students/:
    get:
      operationId: v1_person_students_list
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
          description: ''
  /api/v1/person/students/{id}/:
    get:
      operationId: v1_person_students_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
          description: ''
  /api/v1/schools/available-new/:
    get:
      operationId: v1_schools_available_new_list
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schools'
          description: ''
    post:
      operationId: v1_schools_available_new_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schools'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schools'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schools'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schools'
          description: ''
  /api/v1/schools/by_name/:
    get:
      operationId: v1_schools_by_name_list
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schools'
          description: ''
  /api/v1/schools/details/:
    get:
      operationId: v1_schools_details_list
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schools'
          description: ''
  /api/v1/schools/details/{id}/:
    get:
      operationId: v1_schools_details_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schools'
          description: ''
  /api/v1/schools/school/{id}/:
    delete:
      operationId: v1_schools_school_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Schools:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        maximum_capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    Students:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        grade:
          type: string
          nullable: true
          maxLength: 50
        school:
          type: string
          format: uuid
      required:
      - id
      - school
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
